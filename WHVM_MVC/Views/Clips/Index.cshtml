@model IEnumerable<WHVM.Database.Models.Clip>
@using WHVM_MVC.Helpers

@{
    Layout = "Layouts/_Layout_Sidebar_Index";
    ViewData["SidebarTitle"] = "Clips";
    ViewData["JplistDataGroup"] = "clips";
    ViewData["JplistSortDataPath"] = ".clipID";
    ViewData["JplistSortDataOrder"] = "asc";
    ViewData["JplistSortDataType"] = "number";
}

@section SidebarContent{
    <div>
        <!--#region Filter - Text - ClipName - Clip-->
        @JplistFilterHelpers.WHVMTextFilter(
            "text-name-filter-input-group",
            (string) ViewData["JplistDataGroup"],
            "clipName-text-filter",
            ".clipName",
            "name",
            null,
            "text-name-filter-input",
            elementPlaceholder: "Filter by Name",
            elementDataClearBtnId: "name-clear-btn"
            )
        <!--#endregion-->
        <!--#region Filter - Date - ClipDateMinimum - Clip-->
        @JplistFilterHelpers.WHVMDateFilter(
            "date-min-filter-input-group",
            "Start Date",
            (string) ViewData["JplistDataGroup"],
            "clipDate-text-filter",
            ".clipDate",
            "min-date",
            "",
            "date-min-filter-input",
            JplistFilterHelpers.JplistDateFilterDataMode.dateLower)
        <!--#endregion-->
        <!--#region Filter - Date - ClipDateMaximum - Clip-->
        @JplistFilterHelpers.WHVMDateFilter(
            "date-max-filter-input-group",
            "End Date",
            (string) ViewData["JplistDataGroup"],
            "clipDate-text-filter",
            ".clipDate",
            "max-date",
            "",
            "date-max-filter-input",
            JplistFilterHelpers.JplistDateFilterDataMode.dateUpper)

        <div id="date-filter-error" class="invalid-feedback">Start date must come after end date.</div>
        <!--#endregion-->
        <!--#region Accordion - Filters - Clip-->
        <div class="accordion py-1 py-lg-2" id="filter-accordion">
            <div class="card" id="clips-persons-filter">
                @JplistFilterHelpers.WHVMSidebarAccordionCardHeader("clips-persons-filter", "collapse-persons", "clips-persons-filter-clear", "People")
                @{
                    var checkboxPersonsList = JplistFilterHelpers.WHVMSidebarAccordionCardBodyListCheckbox(
                        (string) (ViewData["JplistDataGroup"]),
                        "checkbox-person-",
                        "clips-persons-filter-clear",
                        "PersonId",
                        "PersonName",
                        "tag-person-",
                        (List<Person>) ViewData["AllPersons"]
                        );
                }
                @JplistFilterHelpers.WHVMSidebarAccordionCardBody("clips-persons-filter", "collapse-persons", "filter-accordion", checkboxPersonsList)
            </div>
            <div class="card" id="clips-collections-filter">
                @JplistFilterHelpers.WHVMSidebarAccordionCardHeader("clips-collections-filter", "collapse-collections", "clips-collections-filter-clear", "Collections")
                @{
                    var checkboxCollectionsList = JplistFilterHelpers.WHVMSidebarAccordionCardBodyListCheckbox(
                        (string) (ViewData["JplistDataGroup"]),
                        "checkbox-collection-",
                        "clips-collections-filter-clear",
                        "CollectionId",
                        "CollectionName",
                        "tag-collection-",
                        (List<Collection>) ViewData["AllCollections"]
                        );
                }
                @JplistFilterHelpers.WHVMSidebarAccordionCardBody("clips-collections-filter", "collapse-collections", "filter-accordion", checkboxCollectionsList)
            </div>
            <div class="card" id="clips-persons-reviewer-filter">
                @JplistFilterHelpers.WHVMSidebarAccordionCardHeader("clips-persons-reviewer-filter", "collapse-persons-reviewer", "clips-persons-reviewer-filter-clear", "Clip Reviewer")
                @{
                    var radioPersonsReviewerList = JplistFilterHelpers.WHVMSidebarAccordionCardBodyListRadio(
                        (string) (ViewData["JplistDataGroup"]),
                        "radio-person-reviewer",
                        "PersonId",
                        "PersonName",
                        "tag-person-reviewer-",
                        ((List<Person>) ViewData["AllPersons"]).Where(x => x.ClipsAsReviewer.Any())
                        );
                }
                @JplistFilterHelpers.WHVMSidebarAccordionCardBody("clips-persons-reviewer-filter", "collapse-persons-reviewer", "filter-accordion", radioPersonsReviewerList)
            </div>
            <div class="card" id="clips-persons-camera-filter">
                @JplistFilterHelpers.WHVMSidebarAccordionCardHeader("clips-persons-camera-filter", "collapse-persons-camera", "clips-persons-camera-filter-clear", "Camera Operator")
                @{
                    var radioPersonCameraList = JplistFilterHelpers.WHVMSidebarAccordionCardBodyListRadio(
                        (string) (ViewData["JplistDataGroup"]),
                        "radio-person-camera",
                        "PersonId",
                        "PersonName",
                        "tag-person-camera-",
                        ((List<Person>) ViewData["AllPersons"]).Where(x => x.ClipsAsCameraOperator.Any())
                        );
                }
                @JplistFilterHelpers.WHVMSidebarAccordionCardBody("clips-persons-camera-filter", "collapse-persons-camera", "filter-accordion", radioPersonCameraList)
            </div>
            <div class="card" id="clips-source-filter">
                @JplistFilterHelpers.WHVMSidebarAccordionCardHeader("clips-source-filter", "collapse-source", "clips-source-filter-clear", "Source")
                @{
                    var radioSourceList = JplistFilterHelpers.WHVMSidebarAccordionCardBodyListRadio(
                        (string) (ViewData["JplistDataGroup"]),
                        "radio-source",
                        "SourceId",
                        "SourceName",
                        "tag-source-",
                        (List<Source>) ViewData["AllSources"]
                        );
                }
                @JplistFilterHelpers.WHVMSidebarAccordionCardBody("clips-source-filter", "collapse-source", "filter-accordion", radioSourceList)
            </div>
        </div>
        <!--#endregion-->

    </div>
}

@section Body{
    <div data-jplist-group="clips" style="overflow: auto">
        @foreach (var item in Model)
        {
            <div class="card" data-jplist-item>
                <a asp-action="Details" asp-controller="Clips" asp-route-id="@item.ClipId" style="text-decoration: none">
                    <div class="row no-gutters">
                        <div class="col-3 col-lg-2 col-xl-1">
                            @*<img src="~/images/@(item.SourceFormat.SourceFormatText)_logo.svg" class="img-fluid p-2 p-md-3" alt="@(item.SourceFormat.SourceFormatText)">*@
                        </div>
                        <div class="col-9 col-lg-10 col-xl-11">
                            <div class="card-body pl-0 pr-2 py-2 pl-md-0 pr-md-3 py-md-3">

                                <h3 class=" stretched-link card-title text-truncate clipName">
                                    @(Html.DisplayFor(modelItem => item.ClipName))
                                </h3>
                                <p class="card-text">
                                    <span class="badge badge-pink align-self-center mr-1 ">Clip ID: @(item.ClipId)</span>
                                    <span class="badge badge-cyan align-self-center mr-1 tag-source-@(item.Source.SourceId)">Source: @(item.Source.SourceName)</span>

                                    @{
                                        if (item.ClipTimeStart != null)
                                        {
                                            <span class="badge badge-teal align-self-center mr-1 ">Start Time: <span class="clipDate">@(Html.DisplayFor(modelItem => item.ClipTimeStart))</span></span>
                                        }
                                    }

                                    @{
                                        if (item.ClipTimeEnd != null)
                                        {
                                            <span class="badge badge-teal align-self-center mr-1 ">End Time: <span class="clipDate">@(Html.DisplayFor(modelItem => item.ClipTimeEnd))</span></span>
                                        }
                                    }

                                    @{
                                        if (item.SourceSegment != null)
                                        {
                                            <span class="badge badge-blue align-self-center mr-1 ">Source Segment: @(item.SourceSegment)</span>
                                        }
                                    }

                                    <br/>Clip Reviewer:
                                    @{
                                        if (item.ClipReviewer?.PersonName != null)
                                        {
                                            <span class="badge badge-secondary align-self-center mr-1 tag-person-@(item.ClipReviewer.PersonId) tag-person-reviewer-@(item.ClipReviewer.PersonId)">@(item.ClipReviewer.PersonName)</span>
                                        }
                                    }

                                    <br/>Camera Operator:
                                    @{
                                        if (item.ClipCameraOperator?.PersonName != null)
                                        {
                                            <span class="badge badge-secondary align-self-center mr-1 tag-person-@(item.ClipCameraOperator.PersonId) tag-person-camera-@(item.ClipCameraOperator.PersonId)">@(item.ClipCameraOperator.PersonName)</span>
                                        }
                                    }

                                    <br/>People:
                                    @{
                                        if (item.ClipPersons.Any())
                                        {
                                            foreach (var clipTagsPeople in item.ClipPersons)
                                            {
                                                <span class="badge badge-secondary align-self-center mr-1 tag-person-@(clipTagsPeople.Person.PersonId)"> @(clipTagsPeople.Person.PersonName)</span>
                                            }
                                        }
                                    }

                                    <br/>Collections:
                                    @{
                                        if (item.ClipCollections.Any())
                                        {
                                            foreach (var clipTagsCollections in item.ClipCollections)
                                            {
                                                <span class="badge badge-secondary align-self-center mr-1 tag-collection-@(clipTagsCollections.Collection.CollectionId)"> @(clipTagsCollections.Collection.CollectionName)</span>
                                            }
                                        }
                                    }

                                </p>
                            </div>
                        </div>
                    </div>
                </a>
            </div>
        }
    </div>
}

@section Scripts
{
    <script src="~/js/View_Clips_Index.js" defer></script>
}