@{
    Layout = "Layouts/_Layout_Sidebar";
}

@section SidebarContent{
    <h2 class="flex-shrink-0 text-truncate">
        @if (IsSectionDefined("SidebarTitle"))
        {
            @await RenderSectionAsync("SidebarTitle").ConfigureAwait(false)
        }
        else
        {
            @ViewData["SidebarTitle"]

        }
    </h2>

    <!-- Filter Collapse toggle-button, only seen at small device sizes-->
    <button class="btn btn-primary d-md-none my-1" type="button" data-toggle="collapse" data-target="#collapseFilters" aria-expanded="false" aria-controls="collapseFilters">
        Navigation
    </button>

    <!--#region Filter Collapse (only collapsible on small devices)-->
    <div class="collapse collapse-md-down" id="collapseFilters" style="overflow-y: auto">
        @if (IsSectionDefined("SidebarContent"))
        {
            @await RenderSectionAsync("SidebarContent").ConfigureAwait(false)
        }
        else
        {
            // default content
        }
        <div id="modelSelector" style="overflow-y: auto">
            <div class="p-0 list-group list-group-flush" id="modelList">

                @foreach (var currentObject in ((Dictionary<int, string>)ViewData["ModelsList"]).OrderBy(item => item.Key))
                {
                    string[] objectClasses =
                    {
                        "list-group-item",
                        "list-group-item-action",
                        "p-2",
                        "text-truncate",
                        currentObject.Key == (int) ViewData["ModelID"] ? "active" : ""
                    };
                    <a asp-action="Details" asp-controller="@(ViewData["Title"])" asp-route-id="@(currentObject.Key)" class="@string.Join(" ", objectClasses)">@currentObject.Value</a>
                }
            </div>
        </div>
    </div>
    <!--#endregion-->
}

@section Body{
    @if (IsSectionDefined("Body"))
    {
        await RenderSectionAsync("Body").ConfigureAwait(false);
    }
    else
    {
        // default content
    }
}

@section LayoutSidebarScripts{
    @if (IsSectionDefined("Scripts"))
    {
        await RenderSectionAsync("Scripts").ConfigureAwait(false);
    }
    else
    {
        // default content
    }
    <script type="text/javascript">
        const ModelsList = @Html.Raw(Json.Serialize(ViewData["ModelsList"]));
        const ModelID = @Html.Raw(Json.Serialize(ViewData["ModelID"]));
    </script>
    <script type="text/javascript" src="~/js/View_Sources_Details.js"></script>
}
