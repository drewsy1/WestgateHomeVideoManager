@using WHVM_MVC.Helpers
@model IEnumerable<Source>

@{
    Layout = "Layouts/_Layout_Sidebar_Index";
    ViewData["SidebarTitle"] = ViewContext.RouteData.Values["controller"];
    ViewData["JplistDataGroup"] = "sources";
    ViewData["JplistSortDataPath"] = ".sourceID";
    ViewData["JplistSortDataOrder"] = "asc";
    ViewData["JplistSortDataType"] = "number";

    var maxClipCount = Model.Max(x => x.Clips.Count());
}

@section SidebarContent{
    <div>
        <!--#region Filter - Radio - SourcesFormat - Sources-->
        <div class="btn-group btn-group-toggle btn-group-sm col-12 px-0 py-1" id="sourceFormat-tag-filter-group">
            <label class="btn btn-secondary active px-1" id="sourceFormat-tag-filter-default-btn">
                <input class=""
                       type="radio"
                       data-jplist-control="radio-buttons-text-filter"
                       data-group="@ViewData["JplistDataGroup"]"
                       data-name="sourceFormat-tag-filter"
                       data-path="default"
                       name="sourceFormat-tag-filter"
                       data-id="format"
                       value=""
                       id="sourceFormat-tag-filter-default">
                All
            </label>
            @foreach (var format in (List<SourceFormat>)ViewData["AllSourceFormats"])
            {
                <label class="btn btn-secondary px-1" id="sourceFormat-tag-filter-@(format.SourceFormatName)-btn">
                    <input class=""
                           type="radio"
                           data-jplist-control="radio-buttons-text-filter"
                           data-group="@ViewData["JplistDataGroup"]"
                           data-name="sourceFormat-tag-filter"
                           data-path=".sourceFormat"
                           name="sourceFormat-tag-filter"
                           data-id="format"
                           value="@(format.SourceFormatName)"
                           id="sourceFormat-tag-filter-@(format.SourceFormatName)" />
                    @(format.SourceFormatName)
                </label>
            }
        </div>
        <!--#endregion-->
        <!--#region Filter - Text - SourcesName - Sources-->
        @JplistFilterHelpers.WHVMTextFilter(
            "text-name-filter-input-group",
            (string)ViewData["JplistDataGroup"],
            "sourceName-text-filter",
            ".sourceName",
            "name",
            null,
            "text-name-filter-input",
            elementPlaceholder: "Filter by Name",
            elementDataClearBtnId: "name-clear-btn"
            )
        <!--#endregion-->
        <!--#region Filter - Date - SourcesDateMinimum - Sources-->
        @JplistFilterHelpers.WHVMDateFilter(
            "date-min-filter-input-group",
            "Start Date",
            (string) ViewData["JplistDataGroup"],
            "sourceDate-text-filter",
            ".sourceDate",
            "min-date",
            "",
            "date-min-filter-input",
            JplistFilterHelpers.JplistDateFilterDataMode.dateLower)
        <!--#endregion-->
        <!--#region Filter - Date - SourcesDateMaximum - Sources-->
        @JplistFilterHelpers.WHVMDateFilter(
            "date-max-filter-input-group",
            "End Date",
            (string) ViewData["JplistDataGroup"],
            "sourceDate-text-filter",
            ".sourceDate",
            "max-date",
            "",
            "date-max-filter-input",
            JplistFilterHelpers.JplistDateFilterDataMode.dateUpper)
        <!--#endregion-->
        <!--#region Filter - Slider - SourcesClipsCount - Sources -->
        <div class='input-group input-group-sm py-1 py-lg-2' id="sourceClipCountRange">
            <span>Number of Clips</span>
            <div data-jplist-control="slider-range-filter"
                 data-group="@ViewData["JplistDataGroup"]"
                 data-name="sourceClipsCount-range-filter"
                 data-path=".sourceClipsCount"
                 data-id="clips"
                 id="sourceClipCountFilter"
                 data-min="0"
                 data-from="0"
                 data-to="@maxClipCount"
                 data-max="@maxClipCount">

                <div class="jplist-slider" data-type="slider"></div>

                <div class="jplist-slider-values">
                    <b>Min:</b> <span data-type="min"></span>,
                    <b>Current Min:</b> <span data-type="value-1"></span>,
                    <b>Current Max:</b> <span data-type="value-2"></span>,
                    <b>Max:</b> <span data-type="max"></span>
                </div>
            </div>
        </div>
        <!--#endregion-->

    </div>
}

@section Body{
    <div data-jplist-group="sources" style="overflow: auto">
        @foreach (var item in Model)
        {
            int itemClipCount = item.Clips.Count();
            <a asp-action="Details" asp-controller="Sources" asp-route-id="@item.SourceId" class="card" data-jplist-item style="text-decoration:none">
                <span class="sourceDate" style="display: none">@(Html.DisplayFor(modelItem => item.SourceDateStart))</span>
                <span class="sourceDate" style="display: none">@(Html.DisplayFor(modelItem => item.SourceDateEnd))</span>
                <span class="sourceFormat" style="display: none">@(Html.DisplayFor(modelItem => item.SourceFormat.SourceFormatName))</span>
                <span class="sourceClipsCount" style="display: none">@(Html.DisplayFor(modelItem => itemClipCount))</span>
                <div class="row no-gutters">
                    <div class="col-3 col-lg-2 col-xl-1">
                        <img src="~/images/@(item.SourceFormat.SourceFormatName)_logo.svg" class="img-fluid p-2 p-md-3" alt="@(item.SourceFormat.SourceFormatName)">
                    </div>
                    <div class="col-9 col-lg-10 col-xl-11">
                        <div class="card-body pl-0 pr-2 py-2 pl-md-0 pr-md-3 py-md-3">
                            <h3 class="card-title text-truncate sourceName">
                                @(Html.DisplayFor(modelItem => item.SourceName))
                            </h3>
                            <p class="card-text">
                                <span class="badge badge-info align-self-center mr-1 ">@(item.SourceFormat.SourceFormatName)</span>
                                @{
                                    
                                    switch (itemClipCount)
                                        {
                                            case 0:
                                            <span class="badge badge-danger align-self-center mr-1 ">0 clips</span>
                                            break;
                                        case 1:
                                            <span class="badge badge-secondary align-self-center mr-1 ">1 clip</span>
                                            break;
                                        default:
                                            <span class="badge badge-secondary align-self-center mr-1 ">@itemClipCount clips</span>
                                            break;
                                    } }

                                @{if (item.SourceDateStart != null)
                                    {
                                        <span class="badge badge-secondary align-self-center mr-1 ">Start Date: @(Html.DisplayFor(modelItem => item.SourceDateStart))</span>
                                    }
                                    else
                                    {
                                        <span class="badge badge-danger align-self-center mr-1 ">No start date!</span>
                                    }
                                }

                                @{if (item.SourceDateEnd != null)
                                    {
                                        <span class="badge badge-secondary align-self-center mr-1 ">End Date: @(Html.DisplayFor(modelItem => item.SourceDateEnd))</span>
                                    }
                                    else
                                    {
                                        <span class="badge badge-danger align-self-center mr-1 ">No end date!</span>
                                    }
                                }

                                @{if (item.SourceDateCreated != null)
                                    {
                                        <span class="badge badge-secondary align-self-center mr-1 ">Date Created: @(Html.DisplayFor(modelItem => item.SourceDateCreated))</span>
                                    }
                                    else
                                    {
                                        <span class="badge badge-danger align-self-center mr-1 ">No date created!</span>
                                    }
                                }

                                @{if (item.SourceDateImported != null)
                                    {
                                        <span class="badge badge-secondary align-self-center mr-1 ">Date Imported: @(Html.DisplayFor(modelItem => item.SourceDateImported))</span>
                                    }
                                    else
                                    {
                                        <span class="badge badge-danger align-self-center mr-1 ">No date imported!</span>
                                    }
                                }


                            </p>
                        </div>
                    </div>
                </div>
            </a>
        }
    </div>
}

@section Scripts
{
    <script type="text/javascript" src="~/js/View_Sources_Index.js" defer></script>
}