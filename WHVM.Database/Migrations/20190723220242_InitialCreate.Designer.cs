// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WHVM.Database.Models;

namespace WHVM.Database.Migrations
{
    [DbContext(typeof(HomeVideoDBContext))]
    [Migration("20190723220242_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WHVM.Database.Models.Clip", b =>
                {
                    b.Property<int>("ClipId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClipCameraOperatorId");

                    b.Property<string>("ClipDescription");

                    b.Property<string>("ClipFilePath");

                    b.Property<int?>("ClipNumber");

                    b.Property<int?>("ClipReviewerId");

                    b.Property<DateTime?>("ClipTimeEnd");

                    b.Property<DateTime?>("ClipTimeStart");

                    b.Property<TimeSpan?>("ClipVidTimeEnd");

                    b.Property<TimeSpan?>("ClipVidTimeStart");

                    b.Property<int?>("SourceId");

                    b.Property<int?>("SourceSegment");

                    b.HasKey("ClipId");

                    b.HasIndex("ClipCameraOperatorId");

                    b.HasIndex("ClipReviewerId");

                    b.HasIndex("SourceId");

                    b.ToTable("Clips");
                });

            modelBuilder.Entity("WHVM.Database.Models.ClipCollection", b =>
                {
                    b.Property<int>("ClipId");

                    b.Property<int>("CollectionId");

                    b.HasKey("ClipId", "CollectionId");

                    b.HasIndex("CollectionId");

                    b.ToTable("ClipCollections");
                });

            modelBuilder.Entity("WHVM.Database.Models.ClipPerson", b =>
                {
                    b.Property<int>("ClipId");

                    b.Property<int>("PersonId");

                    b.HasKey("ClipId", "PersonId");

                    b.HasIndex("PersonId");

                    b.ToTable("ClipPersons");
                });

            modelBuilder.Entity("WHVM.Database.Models.Collection", b =>
                {
                    b.Property<int>("CollectionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CollectionName");

                    b.HasKey("CollectionId");

                    b.ToTable("Collections");
                });

            modelBuilder.Entity("WHVM.Database.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PersonName");

                    b.HasKey("PersonId");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("WHVM.Database.Models.Source", b =>
                {
                    b.Property<int>("SourceId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("SourceDateCreated");

                    b.Property<DateTime?>("SourceDateImported");

                    b.Property<string>("SourceFilePath");

                    b.Property<int>("SourceFormatId");

                    b.Property<string>("SourceLabel");

                    b.HasKey("SourceId");

                    b.HasIndex("SourceFormatId");

                    b.ToTable("Sources");
                });

            modelBuilder.Entity("WHVM.Database.Models.SourceFormat", b =>
                {
                    b.Property<int>("SourceFormatId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SourceFormatLogoPath");

                    b.Property<string>("SourceFormatText");

                    b.HasKey("SourceFormatId");

                    b.ToTable("SourceFormats");
                });

            modelBuilder.Entity("WHVM.Database.Models.Clip", b =>
                {
                    b.HasOne("WHVM.Database.Models.Person", "ClipCameraOperator")
                        .WithMany("ClipsAsCameraOperator")
                        .HasForeignKey("ClipCameraOperatorId");

                    b.HasOne("WHVM.Database.Models.Person", "ClipReviewer")
                        .WithMany("ClipsAsReviewer")
                        .HasForeignKey("ClipReviewerId");

                    b.HasOne("WHVM.Database.Models.Source", "Source")
                        .WithMany("Clips")
                        .HasForeignKey("SourceId");
                });

            modelBuilder.Entity("WHVM.Database.Models.ClipCollection", b =>
                {
                    b.HasOne("WHVM.Database.Models.Clip", "Clip")
                        .WithMany("ClipCollections")
                        .HasForeignKey("ClipId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WHVM.Database.Models.Collection", "Collection")
                        .WithMany("ClipCollections")
                        .HasForeignKey("CollectionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WHVM.Database.Models.ClipPerson", b =>
                {
                    b.HasOne("WHVM.Database.Models.Clip", "Clip")
                        .WithMany("ClipPersons")
                        .HasForeignKey("ClipId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WHVM.Database.Models.Person", "Person")
                        .WithMany("ClipPersons")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WHVM.Database.Models.Source", b =>
                {
                    b.HasOne("WHVM.Database.Models.SourceFormat", "SourceFormat")
                        .WithMany("Sources")
                        .HasForeignKey("SourceFormatId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
